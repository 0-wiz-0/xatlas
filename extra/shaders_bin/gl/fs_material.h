static const uint8_t fs_material_gl[2817] =
{
	0x46, 0x53, 0x48, 0x06, 0xa2, 0xbe, 0xeb, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xee, 0x0a, // FSH....G........
	0x00, 0x00, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, // ..in vec4 v_colo
	0x72, 0x30, 0x3b, 0x0a, 0x69, 0x6e, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x76, 0x5f, 0x6e, 0x6f, // r0;.in vec3 v_no
	0x72, 0x6d, 0x61, 0x6c, 0x3b, 0x0a, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x69, // rmal;.centroid i
	0x6e, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, // n vec4 v_texcoor
	0x64, 0x30, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, // d0;.uniform samp
	0x6c, 0x65, 0x72, 0x32, 0x44, 0x20, 0x73, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, // ler2D s_diffuse;
	0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, // .uniform sampler
	0x32, 0x44, 0x20, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, // 2D s_emission;.u
	0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x32, 0x44, // niform sampler2D
	0x20, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x3b, 0x0a, 0x75, 0x6e, 0x69, //  s_lightmap;.uni
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, // form vec4 u_diff
	0x75, 0x73, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, // use;.uniform vec
	0x34, 0x20, 0x75, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, // 4 u_emission;.un
	0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, // iform vec4 u_lig
	0x68, 0x74, 0x44, 0x69, 0x72, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, // htDir;.uniform v
	0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, // ec4 u_shade_over
	0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, // lay_diffuse_emis
	0x73, 0x69, 0x6f, 0x6e, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, // sion;.uniform ve
	0x63, 0x34, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, // c4 u_textureSize
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, // _cellSize2;.unif
	0x6f, 0x72, 0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, // orm vec4 u_overl
	0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, // ayOpacity_colorC
	0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3b, 0x0a, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, // hartType;.unifor
	0x6d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, // m vec4 u_meshCol
	0x6f, 0x72, 0x3b, 0x0a, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x6d, 0x61, 0x69, 0x6e, 0x20, 0x28, 0x29, // or;.void main ()
	0x0a, 0x7b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // .{.  vec4 color_
	0x31, 0x3b, 0x0a, 0x20, 0x20, 0x76, 0x65, 0x63, 0x34, 0x20, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, // 1;.  vec4 emissi
	0x6f, 0x6e, 0x5f, 0x32, 0x3b, 0x0a, 0x20, 0x20, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // on_2;.  emission
	0x5f, 0x32, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3b, // _2 = u_emission;
	0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, // .  if ((uint(u_s
	0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, // hade_overlay_dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x29, // fuse_emission.w)
	0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, //  == 1u)) {.    e
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, // mission_2.xyz = 
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, // texture (s_emiss
	0x69, 0x6f, 0x6e, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, // ion, v_texcoord0
	0x2e, 0x78, 0x79, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, // .xy).xyz;.  };. 
	0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x20, 0x3d, 0x20, 0x76, 0x65, 0x63, 0x34, 0x28, //  color_1 = vec4(
	0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x30, 0x2e, 0x30, 0x2c, 0x20, 0x31, // 0.0, 0.0, 0.0, 1
	0x2e, 0x30, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x28, 0x65, 0x6d, // .0);.  if ((((em
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x78, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, // ission_2.x > 0.0
	0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, // ) || (emission_2
	0x2e, 0x79, 0x20, 0x3e, 0x20, 0x30, 0x2e, 0x30, 0x29, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x65, // .y > 0.0)) || (e
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x7a, 0x20, 0x3e, 0x20, 0x30, 0x2e, // mission_2.z > 0.
	0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, // 0))) {.    color
	0x5f, 0x31, 0x20, 0x3d, 0x20, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x3b, // _1 = emission_2;
	0x0a, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, // .  } else {.    
	0x76, 0x65, 0x63, 0x34, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x3b, 0x0a, // vec4 diffuse_3;.
	0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x20, 0x3d, 0x20, //     diffuse_3 = 
	0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, // u_diffuse;.    i
	0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, // f ((uint(u_shade
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // _overlay_diffuse
	0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x7a, 0x29, 0x20, 0x3d, 0x3d, 0x20, // _emission.z) == 
	0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x66, // 1u)) {.      dif
	0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x20, 0x3d, 0x20, 0x28, 0x75, 0x5f, 0x64, 0x69, 0x66, 0x66, // fuse_3 = (u_diff
	0x75, 0x73, 0x65, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, // use * texture (s
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // _diffuse, v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x78, 0x79, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // oord0.xy));.    
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, // };.    if ((uint
	0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // (u_shade_overlay
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // _diffuse_emissio
	0x6e, 0x2e, 0x78, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, // n.x) == uint(0))
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, // ) {.      color_
	0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, // 1.xyz = (diffuse
	0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, // _3.xyz * ((.    
	0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x74, 0x20, 0x28, 0x76, 0x5f, 0x6e, 0x6f, 0x72, 0x6d, 0x61, //     dot (v_norma
	0x6c, 0x2c, 0x20, 0x75, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x69, 0x72, 0x2e, 0x78, 0x79, // l, u_lightDir.xy
	0x7a, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x35, 0x29, // z).       * 0.5)
	0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, //  + 0.5));.    } 
	0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, // else {.      if 
	0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, // ((uint(u_shade_o
	0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, // verlay_diffuse_e
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x31, 0x75, // mission.x) == 1u
	0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, // )) {.        col
	0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x64, 0x69, 0x66, 0x66, // or_1.xyz = (diff
	0x75, 0x73, 0x65, 0x5f, 0x33, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x74, 0x65, 0x78, 0x74, // use_3.xyz * text
	0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, 0x70, 0x2c, // ure (s_lightmap,
	0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x77, 0x29, //  v_texcoord0.zw)
	0x2e, 0x78, 0x79, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // .xyz);.      } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // lse {.        if
	0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, //  ((uint(u_shade_
	0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, // overlay_diffuse_
	0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x78, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, // emission.x) == 2
	0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // u)) {.          
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x74, 0x65, // color_1.xyz = te
	0x78, 0x74, 0x75, 0x72, 0x65, 0x20, 0x28, 0x73, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6d, 0x61, // xture (s_lightma
	0x70, 0x2c, 0x20, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, // p, v_texcoord0.z
	0x77, 0x29, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // w).xyz;.        
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // };.      };.    
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x2e, 0x77, // };.    color_1.w
	0x20, 0x3d, 0x20, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x33, 0x2e, 0x77, 0x3b, 0x0a, //  = diffuse_3.w;.
	0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, //   };.  if ((uint
	0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, // (u_shade_overlay
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, // _diffuse_emissio
	0x6e, 0x2e, 0x79, 0x29, 0x20, 0x21, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, // n.y) != uint(0))
	0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x76, 0x65, 0x63, 0x33, 0x20, 0x6f, 0x76, 0x65, // ) {.    vec3 ove
	0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x3b, 0x0a, 0x20, 0x20, 0x20, // rlayColor_4;.   
	0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x73, 0x68, 0x61, //  if ((uint(u_sha
	0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x75, // de_overlay_diffu
	0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x79, 0x29, 0x20, 0x3d, // se_emission.y) =
	0x3d, 0x20, 0x31, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, // = 1u)) {.      f
	0x6c, 0x6f, 0x61, 0x74, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x35, 0x3b, 0x0a, 0x20, 0x20, // loat scale_5;.  
	0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, //     uint tmpvar_
	0x36, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, // 6;.      tmpvar_
	0x36, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, // 6 = uint((v_texc
	0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x7a, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, // oord0.z * u_text
	0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, // ureSize_cellSize
	0x32, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, // 2.x));.      uin
	0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // t tmpvar_7;.    
	0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x37, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, //   tmpvar_7 = uin
	0x74, 0x28, 0x28, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x30, 0x2e, 0x77, // t((v_texcoord0.w
	0x20, 0x2a, 0x20, 0x75, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, //  * u_textureSize
	0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x32, 0x2e, 0x79, 0x29, 0x29, 0x3b, 0x0a, // _cellSize2.y));.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //       uint tmpva
	0x72, 0x5f, 0x38, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, // r_8;.      tmpva
	0x72, 0x5f, 0x38, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x74, 0x65, 0x78, // r_8 = uint(u_tex
	0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x69, 0x7a, // tureSize_cellSiz
	0x65, 0x32, 0x2e, 0x7a, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x63, 0x61, // e2.z);.      sca
	0x6c, 0x65, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, // le_5 = 1.0;.    
	0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x20, //   if ((tmpvar_8 
	0x3e, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // > uint(0))) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, //       float tmpv
	0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, // ar_9;.        if
	0x20, 0x28, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x28, 0x28, 0x74, //  (((uint(mod ((t
	0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x36, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // mpvar_6 / tmpvar
	0x5f, 0x38, 0x29, 0x2c, 0x20, 0x32, 0x75, 0x29, 0x29, 0x29, 0x20, 0x21, 0x3d, 0x20, 0x28, 0x75, // _8), 2u))) != (u
	0x69, 0x6e, 0x74, 0x28, 0x6d, 0x6f, 0x64, 0x20, 0x28, 0x28, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, // int(mod ((tmpvar
	0x5f, 0x37, 0x20, 0x2f, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x38, 0x29, 0x2c, 0x20, // _7 / tmpvar_8), 
	0x32, 0x75, 0x29, 0x29, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // 2u))))) {.      
	0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x30, //     tmpvar_9 = 0
	0x2e, 0x37, 0x35, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, // .75;.        } e
	0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // lse {.          
	0x74, 0x6d, 0x70, 0x76, 0x61, 0x72, 0x5f, 0x39, 0x20, 0x3d, 0x20, 0x31, 0x2e, 0x30, 0x3b, 0x0a, // tmpvar_9 = 1.0;.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, //         };.     
	0x20, 0x20, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x35, 0x20, 0x3d, 0x20, 0x74, 0x6d, 0x70, //    scale_5 = tmp
	0x76, 0x61, 0x72, 0x5f, 0x39, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, // var_9;.      };.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x20, 0x74, 0x6d, 0x70, 0x76, 0x61, //       uint tmpva
	0x72, 0x5f, 0x31, 0x30, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x6d, 0x70, 0x76, // r_10;.      tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x20, 0x3d, 0x20, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x28, 0x76, 0x5f, // ar_10 = uint((v_
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x77, 0x20, 0x2b, 0x20, 0x30, 0x2e, 0x35, 0x29, 0x29, // color0.w + 0.5))
	0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x28, 0x75, 0x69, // ;.      if (((ui
	0x6e, 0x74, 0x28, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, // nt(u_overlayOpac
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, // ity_colorChartTy
	0x70, 0x65, 0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x35, 0x75, 0x29, 0x20, 0x7c, 0x7c, 0x20, // pe.y) == 5u) || 
	0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, // (uint(u_overlayO
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, // pacity_colorChar
	0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x74, 0x6d, 0x70, 0x76, // tType.y) == tmpv
	0x61, 0x72, 0x5f, 0x31, 0x30, 0x29, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, // ar_10))) {.     
	0x20, 0x20, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, //    overlayColor_
	0x34, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x30, 0x2e, 0x78, 0x79, // 4 = (v_color0.xy
	0x7a, 0x20, 0x2a, 0x20, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, // z * scale_5);.  
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, //     } else {.   
	0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, //      overlayColo
	0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x28, 0x76, 0x65, 0x63, 0x33, 0x28, 0x30, 0x2e, 0x37, 0x35, // r_4 = (vec3(0.75
	0x2c, 0x20, 0x30, 0x2e, 0x37, 0x35, 0x2c, 0x20, 0x30, 0x2e, 0x37, 0x35, 0x29, 0x20, 0x2a, 0x20, // , 0.75, 0.75) * 
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x35, 0x29, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, // scale_5);.      
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x20, 0x65, 0x6c, 0x73, 0x65, 0x20, 0x7b, 0x0a, // };.    } else {.
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x28, 0x75, 0x69, 0x6e, 0x74, 0x28, //       if ((uint(
	0x75, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x5f, // u_shade_overlay_
	0x64, 0x69, 0x66, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, // diffuse_emission
	0x2e, 0x79, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x32, 0x75, 0x29, 0x29, 0x20, 0x7b, 0x0a, 0x20, 0x20, // .y) == 2u)) {.  
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6c, //       overlayCol
	0x6f, 0x72, 0x5f, 0x34, 0x20, 0x3d, 0x20, 0x75, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6c, // or_4 = u_meshCol
	0x6f, 0x72, 0x2e, 0x78, 0x79, 0x7a, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, // or.xyz;.      };
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x63, 0x6f, 0x6c, 0x6f, // .    };.    colo
	0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x3d, 0x20, 0x28, 0x28, 0x63, 0x6f, 0x6c, 0x6f, // r_1.xyz = ((colo
	0x72, 0x5f, 0x31, 0x2e, 0x78, 0x79, 0x7a, 0x20, 0x2a, 0x20, 0x28, 0x31, 0x2e, 0x30, 0x20, 0x2d, // r_1.xyz * (1.0 -
	0x20, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, //  u_overlayOpacit
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, // y_colorChartType
	0x2e, 0x78, 0x29, 0x29, 0x20, 0x2b, 0x20, 0x28, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x43, // .x)) + (overlayC
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x34, 0x20, 0x2a, 0x20, 0x75, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, // olor_4 * u_overl
	0x61, 0x79, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, // ayOpacity_colorC
	0x68, 0x61, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x78, 0x29, 0x29, 0x3b, 0x0a, 0x20, 0x20, // hartType.x));.  
	0x7d, 0x3b, 0x0a, 0x20, 0x20, 0x67, 0x6c, 0x5f, 0x46, 0x72, 0x61, 0x67, 0x43, 0x6f, 0x6c, 0x6f, // };.  gl_FragColo
	0x72, 0x20, 0x3d, 0x20, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x3b, 0x0a, 0x7d, 0x0a, 0x0a, // r = color_1;.}..
	0x00,                                                                                           // .
};
